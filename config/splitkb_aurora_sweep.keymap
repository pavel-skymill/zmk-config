#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/mouse.h>

// Layer shortcuts
#define BASE 0
#define NAV 1
#define MOUS 2
#define NUM 3
#define SYMB 4
#define EXTR 5
#define FUNC 6
#define GAME 7

// Mouse keys
#define U_MOUSE_MOVE_MAX 1100
#define U_MOUSE_SCROLL_MAX 100

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT

#define MOVE_UP MOVE_Y(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_Y(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_X(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_X(U_MOUSE_MOVE_MAX)
#define SCROLL_UP SCRL_Y(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCRL_Y(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCRL_X(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCRL_X(U_MOUSE_SCROLL_MAX)

// Misc binds
#define PAUSE PAUSE_BREAK
#define BT_0 BT_SEL 0
#define BT_1 BT_SEL 1
#define BT_2 BT_SEL 2
#define BT_3 BT_SEL 3

// Mouse speeds
&mmv {
  time-to-max-speed-ms = <300>;
  acceleration-exponent = <1>;
  delay-ms = <0>;
};

&msc {
  time-to-max-speed-ms = <600>;
  acceleration-exponent = <1>;
  delay-ms = <0>;
};

// Layer tap
&lt {
  tapping-term-ms = <160>;
  quick-tap-ms = <160>;
};

/ {

    combos {
      compatible = "zmk,combos";
      combo_ae {
          timeout-ms = <50>;
          key-positions = <28 29>;
          bindings = <&kp SQT>;
          layers = <0>;
      };
      combo_oe {
          timeout-ms = <50>;
          key-positions = <27 28>;
          bindings = <&kp SEMI>;
          layers = <0>;
     };
      combo_ao {
          timeout-ms = <50>;
          key-positions = <26 27>;
          bindings = <&kp LBKT>;
          layers = <0>;
      };
      combo_hard {
          timeout-ms = <50>;
          key-positions = <25 26>;
          bindings = <&kp RBKT>;
          layers = <0>;
      };
      combo_game_layer {
          timeout-ms = <50>;
          key-positions = <0 1 2>;
          bindings = <&tog GAME>;
          layers = <0 7>;
      };
      combo_extras_layer {
          timeout-ms = <50>;
          key-positions = <30 33>;
          bindings = <&mo EXTR>;
          layers = <0>;
      };     
      combo_functions_layer {
          timeout-ms = <50>;
          key-positions = <31 32>;
          bindings = <&mo FUNC>;
          layers = <0>;
      };
      combo_escape {
          timeout-ms = <50>;
          key-positions = <10 11>;
          bindings = <&kp ESC>;
          layers = <0>;
      };
    };

    behaviours {
     td13: num_dance_0 {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_NUM_1_3";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp N1>, <&kp N2>, <&kp N3>;
      };
     td46: num_dance_1 {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_NUM_4_6";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp N4>, <&kp N5>, <&kp N6>;
      };
     td79: num_dance_2 {
        compatible = "zmk,behavior-tap-dance";
        label = "TAP_DANCE_NUM_7_9";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp N7>, <&kp N8>, <&kp N9>;
      };
      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <160>;
        quick-tap-ms = <160>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
      };
     shm: shift_homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "SHIFT_HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <160>;
        quick-tap-ms = <160>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "Base";
            bindings = <
&kp Q      &kp W       &kp E        &kp R       &kp T          &kp Y         &kp U         &kp I        &kp O      &kp P
&hm LGUI A &hm LALT S  &shm LSHFT D &hm LCTRL F &kp G          &kp H         &hm RCTRL J   &shm RSHFT K &hm RALT L &hm RGUI BSLH
&kp Z      &kp X       &kp C        &kp V       &kp B          &kp N         &kp M         &kp COMMA    &kp DOT    &kp LS(N7)
                                    &lt NAV TAB &lt MOUS SPACE &lt NUM ENTER &lt SYMB BSPC
            >;
        };

        navigation {
            display-name = "Navigation";
            bindings = <
&kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &none     &none     &kp LC(Y) &kp LC(V) &kp LC(C) &kp LC(X) &kp LC(Z)
&kp LGUI     &kp LALT   &kp LSHFT    &kp LCTRL &none     &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp PSCRN
&kp C_PREV   &kp C_PP   &kp C_NEXT   &none     &none     &kp HOME  &kp PG_DN &kp PG_UP &kp END   &kp LS(INSERT)
                        &trans       &kp SPC   &kp ENTER &kp DEL
            >;
        };

        mouse {
            display-name = "Mouse";
            bindings = <
&none    &none    &none     &none     &none   &kp LC(Y)        &kp LC(V)        &kp LC(C)       &kp LC(X)         &kp LC(Z)
&kp LGUI &kp LALT &kp LSHFT &kp LCTRL &none   &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_UP    &mmv MOVE_RIGHT   &kp PSCRN
&none    &none    &none     &none     &none   &msc SCROLL_LEFT &msc SCROLL_DOWN &msc SCROLL_UP  &msc SCROLL_RIGHT &kp LS(INSERT)
                            &kp TAB   &trans  &mkp LCLK        &mkp RCLK
            >;
        };

        numbers {
            display-name = "Numbers";
            bindings = <
&kp LS(EQUAL) &kp LS(N0)   &kp N7 &kp N8    &kp N9    &none  &none     &none     &none    &none
&kp RA(MINUS) &kp RA(NUBS) &kp N4 &kp N5    &kp N6    &none  &kp RCTRL &kp RSHFT &kp RALT &kp RGUI
&none         &kp N0       &kp N1 &kp N2    &kp N3    &none  &none     &none     &none    &none
                                  &kp MINUS &kp SLASH &trans &none
            >;
        };

        symbols {
            display-name = "Symbols";
            bindings = <
&kp RA(RBKT) &kp RA(NUBS)  &kp LS(N7) &kp LS(N8)    &kp LS(N9)  &none  &none     &kp C_PREV &kp C_PP &kp C_NEXT
&kp LS(BSLH) &kp LS(MINUS) &kp RA(N4) &kp LS(N5)    &kp LS(N6)  &none  &kp RCTRL &kp RSHFT  &kp RALT &kp RGUI
&none        &kp LS(N0)    &kp LS(N1) &kp LS(N2)    &kp LS(N3)  &none  &none     &none      &none    &none
                                      &kp LS(COMMA) &kp LS(DOT) &none  &trans
            >;
        };

        extras {
            display-name = "Extras";
            bindings = <
&kp NUBS   &kp LS(NUBS) &kp RA(NUBS)  &kp LS(N8) &kp LS(N9) &rgb_ug RGB_EFF &rgb_ug RGB_SPI &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI 
&kp RA(N7) &kp RA(N0)   &kp RA(N3)    &kp RA(N5) &none      &rgb_ug RGB_TOG &kp RCTRL       &kp RSHFT       &kp RALT        &kp RGUI
&kp RA(N8) &kp RA(N9)   &kp RA(TILDE) &kp RA(N2) &none      &rgb_ug RGB_EFR &rgb_ug RGB_SPD &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD
                                      &trans &none &none &trans
            >;
        };

        functions {
            display-name = "Functions";
            bindings = <
&kp F12 &none &kp F7 &kp F8 &kp F9 &rgb_ug RGB_SPI &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI 
&kp F11 &none &kp F4 &kp F5 &kp F6 &rgb_ug RGB_TOG &kp RCTRL       &kp RSHFT       &kp LALT        &kp RGUI
&kp F10 &none &kp F1 &kp F2 &kp F3 &bt BT_0        &bt BT_1        &bt BT_2        &bt BT_3        &bt BT_CLR
                     &none  &trans &trans          &none
            >;
        };

        gaming {
            display-name = "Gaming";
            bindings = <
&mt TAB ESC &kp Q    &kp W    &kp E     &kp R  &kp Y  &kp U  &kp I     &kp O &kp P
&kp LSHFT   &kp A    &kp S    &kp D     &kp F  &kp H  &kp J  &kp K     &kp L &kp ENTER
&kp LCTRL   &kp Z    &kp X    &kp C     &kp V  &kp N  &kp M  &kp COMMA &td79 &kp N0
                     &kp LALT &kp SPACE &td13  &td46  
            >;
        };
    };
};
